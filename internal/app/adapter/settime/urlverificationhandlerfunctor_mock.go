// Code generated by MockGen. DO NOT EDIT.
// Source: ./urlverificationhandlerfunctor.go

// Package settime is a generated GoMock package.
package settime

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUrlVerificationRequestHandler is a mock of UrlVerificationRequestHandler interface
type MockUrlVerificationRequestHandler struct {
	ctrl     *gomock.Controller
	recorder *MockUrlVerificationRequestHandlerMockRecorder
}

// MockUrlVerificationRequestHandlerMockRecorder is the mock recorder for MockUrlVerificationRequestHandler
type MockUrlVerificationRequestHandlerMockRecorder struct {
	mock *MockUrlVerificationRequestHandler
}

// NewMockUrlVerificationRequestHandler creates a new mock instance
func NewMockUrlVerificationRequestHandler(ctrl *gomock.Controller) *MockUrlVerificationRequestHandler {
	mock := &MockUrlVerificationRequestHandler{ctrl: ctrl}
	mock.recorder = &MockUrlVerificationRequestHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUrlVerificationRequestHandler) EXPECT() *MockUrlVerificationRequestHandlerMockRecorder {
	return m.recorder
}

// Handle mocks base method
func (m *MockUrlVerificationRequestHandler) Handle(ctx context.Context, data EventCallbackData) *Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", ctx, data)
	ret0, _ := ret[0].(*Response)
	return ret0
}

// Handle indicates an expected call of Handle
func (mr *MockUrlVerificationRequestHandlerMockRecorder) Handle(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockUrlVerificationRequestHandler)(nil).Handle), ctx, data)
}
