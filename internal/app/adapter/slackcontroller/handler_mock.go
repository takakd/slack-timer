// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/adapter/slackcontroller/handler.go

// Package slackcontroller is a generated GoMock package.
package slackcontroller

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequestHandler is a mock of RequestHandler interface
type MockRequestHandler struct {
	ctrl     *gomock.Controller
	recorder *MockRequestHandlerMockRecorder
}

// MockRequestHandlerMockRecorder is the mock recorder for MockRequestHandler
type MockRequestHandlerMockRecorder struct {
	mock *MockRequestHandler
}

// NewMockRequestHandler creates a new mock instance
func NewMockRequestHandler(ctrl *gomock.Controller) *MockRequestHandler {
	mock := &MockRequestHandler{ctrl: ctrl}
	mock.recorder = &MockRequestHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestHandler) EXPECT() *MockRequestHandlerMockRecorder {
	return m.recorder
}

// Handler mocks base method
func (m *MockRequestHandler) Handler(ctx context.Context) *HandlerResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handler", ctx)
	ret0, _ := ret[0].(*HandlerResponse)
	return ret0
}

// Handler indicates an expected call of Handler
func (mr *MockRequestHandlerMockRecorder) Handler(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handler", reflect.TypeOf((*MockRequestHandler)(nil).Handler), ctx)
}
